name: Build & Parse

# TODO:
# - Reduce duplicate code (Blocking: https://github.community/t5/GitHub-Actions/Support-for-YAML-anchors/td-p/30336)
# - Investigate using scoop as package manager on windows
# - MacOS artifact uploads are still slow (https://github.com/actions/upload-artifact/issues/69)
# - Cache build files on all systems (Looking at you OSX)
# - Cache development libraries on windows
# - Run windows builds as matrix with different mingw versions
# - Construct more intelligent workflows
#    e.g.
#      data/* -> use "latest" build for triggering branch, only run parse and/or acceptance tests
#      source/* -> build new binary, run all tests, cache binary
#      PR opened -> upload artifact ZIPs to PR as comment, and edit/replace as new commits come in
# - Windows: Allow programmers to use their own copy of development libs without hacking a temporary URL in the windows step

on:
  push:
    paths:
    - 'source/**'
    - 'data/**'
    - 'tests/**'
    - 'EndlessSky.xcodeproj/**'
    - 'XCode/**'
    - '.github/workflows/**'
    - keys.txt
    - SConstruct
    - .winmake
  pull_request:
    paths:
    - 'source/**'
    - 'data/**'
    - 'tests/**'
    - 'EndlessSky.xcodeproj/**'
    - 'XCode/**'
    - '.github/workflows/**'
    - keys.txt
    - SConstruct
    - .winmake


jobs:

  build_ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-16.04]
    env:
        CCACHE_DIR: ./ccache/
        CXX: ccache g++
        ARTIFACT: endless-sky
    steps:
    - uses: actions/checkout@v2
    - name: Restore cached artifact
      id: cache-artifact
      uses: actions/cache@v2
      with: 
        path: ${{ env.ARTIFACT }}
        key: ${{ matrix.os }}-artifact-${{ hashFiles('.github/workflows/**') }}-${{ hashFiles('source/**') }}-${{ hashFiles('SConstruct') }} # Any of these files will trigger a rebuild
    - name: Install dependencies
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      run: |
        sudo rm /etc/apt/sources.list.d/* && sudo dpkg --clear-avail # Speed up installation and get rid of unwanted lists
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libsdl2-dev libpng-dev libjpeg-turbo8-dev libopenal-dev libmad0-dev libglew-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev scons ccache
    - name: Cache ccache
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      uses: actions/cache@v2
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ matrix.os }}-ccache-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
        restore-keys: | 
          ${{ matrix.os }}-ccache-${{ github.repository }}-${{ github.ref }}-
          ${{ matrix.os }}-ccache-${{ github.repository }}-
          ${{ matrix.os }}-ccache-
    - name: Compile
      if: steps.cache-artifact.outputs.cache-hit != 'true'
      run: scons -j $(nproc);
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: binary-${{ matrix.os }} 
        path: ${{ env.ARTIFACT }}


  test_ubuntu:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-16.04]
    needs: build_ubuntu
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo rm /etc/apt/sources.list.d/* && sudo dpkg --clear-avail # Speed up installation and get rid of unwanted lists
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends libsdl2-dev libpng-dev libjpeg-turbo8-dev libopenal-dev libmad0-dev libglew-dev libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev scons ccache
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: binary-${{ matrix.os }}
    - name: Execute test_parse
      run: |
        chmod +x endless-sky
        ./tests/test_parse.sh ./endless-sky
